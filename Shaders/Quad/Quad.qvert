#version 450
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : enable

#include "QuadData"
#include "QuadRenderData"

layout(location = 0) out int v_quad_data_index;
layout(location = 1) out vec2 v_tx;

layout(push_constant) uniform constants
{
    QuadRenderData m_RenderData;
} p_constants;

vec2 quad_edge_factors[6] = vec2[]
(
    vec2(0.0, 0.0),
    vec2(1.0, 0.0),
    vec2(1.0, 1.0),
    vec2(0.0, 0.0),
    vec2(1.0, 1.0),
    vec2(0.0, 1.0)
);

void main()
{
    int quad_offset = gl_VertexIndex / 6;
    int edge_factor_index = gl_VertexIndex % 6;
    v_quad_data_index = p_constants.m_RenderData.m_QuadIndex + quad_offset;

    QuadData quad_data = QuadData_buffer.elems[v_quad_data_index];

    vec2 pos = mix(quad_data.m_Start, quad_data.m_End, quad_edge_factors[edge_factor_index]);
    gl_Position = vec4(pos, 0.0, 1.0);

    v_tx = mix(quad_data.m_StartTX, quad_data.m_EndTX, quad_edge_factors[edge_factor_index]);
}
